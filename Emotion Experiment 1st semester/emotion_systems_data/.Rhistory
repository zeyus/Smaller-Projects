install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("tidyr")
install.packages("pastecs")
install.packages("plyr")
install.packages("lme4")
install.packages("rmarkdown")
hahahahahah
#Setting wd
setwd("C:/Users/Ejer/Desktop/2. Semester/Experimental Methods 2/DATA for assignments")
#Loading libraries
library(car);library(ggplot2);library(pastecs);library(reshape);library(mvoutlier);library(mvnormtest);library(MASS)
#Loading the data
MET_test=read.csv("DATA for assignments/music_score.csv")
MET_test=read.csv("DATA for assignments/music_score.csv")
MET_test$melody=as.numeric(MET_test$melody)
MET_test$rhythm=as.numeric(MET_test$rhythm)
MET_test$gender=as.factor(MET_test$gender)
MET_test$group=as.factor(MET_test$group)
View(MET_test)
outcome=cbind(MET_test$melody,MET_test$rhythm)
MET_test$digitspan=as.numeric(MET_test$digitspan)
MET_model=manova(outcome~group+age+gender+digitspan,MET_test)
summary(MET_model,intercept=T)
summary(MET_model,intercept=T,test="Wilks")
summary(MET_model,intercept=T,test="Hotelling")
summary.aov(MET_model)
summary(MET_model,intercept=T)
summary(MET_model,intercept=T,test="Wilks")
MET_model=manova(outcome~group+age+gender+digitspan,MET_test)
MET_model
group1_vs_group0=c(1, 0, 0)
group2_vs_group0=c(0, 0, 1)
contrasts(MET_test$group)=cbind(group1_vs_group0,group2_vs_group0)
contrats
contrasts
MET_model
summary(MET_model)
contrasts(MET_model)
contrast(MET_model)
?Anova
?anova
?summary.aov
Anova(MET_model, type='III')
Anova(MET_model, type='III', test='Wilks')
summary(MET_model,intercept=T,test="Wilks")
Anova(MET_model, type='III', test='Wilks')
summary.aov(MET_model)
group1_vs_group0=c(1, 0, 0)
group2_vs_group0=c(0, 0, 1)
contrasts(MET_test$group)=cbind(group1_vs_group0,group2_vs_group0)
MET_model=manova(outcome~group+age+gender+digitspan,MET_test)
summary(MET_model,intercept=T,test="Wilks")
MET_model=manova(outcome~group+age+gender+digitspan,MET_test)
summary.aov(MET_model)
contrasts(MET_test$group)=cbind(group1_vs_group0,group2_vs_group0)
MET_model=manova(outcome~group+age+gender+digitspan,MET_test)
summary.aov(MET_model)
summary(MET_model,intercept=T,test="Wilks")
library(car);library(ggplot2);library(pastecs);library(reshape);library(mvoutlier);library(mvnormtest);library(MASS)
MET_DFA=lda(group~melody,rhythm,data=MET_test)
MET_DFA=lda(group~melody+rhythm,data=MET_test)
MET_DFAp=predict(MET_DFA,CV=T)
plot(MET_DFAp)
MET_DFA
plot(MET_DFAp)
MET_DFAp=predict(MET_DFA,CV=T)
plot(MET_DFAp)
predict(MET_DFA,CV=T)
plot(MET_DFA)
MET_DFA$class
table(MET_DFA$class,MET_test$group)
MET_DFA
MET_DFA=lda(group~melody+rhythm,data=MET_test,CV=T)
MET_DFA
predict(MET_DFA)
MET_DFA=lda(group~melody+rhythm,data=MET_test,CV=T)
predict(MET_DFA)
MET_DFA=lda(group~melody+rhythm,data=MET_test,CV=T)
MET_DFA
plot(MET_DFA)
table(MET_DFA$class,MET_test$group)
summary(MET_test$group)
table(MET_DFA$class,MET_test$group)
21/16*100
16/21*100
(16+11+14)/(21+21+18)*100
?lda
MET_DFA=lda(group~melody+rhythm,data=MET_test)
MET_DFA
predict(MET_DFA)
plot(MET_DFA)
scatter=ggplot(MET_DFA,aes(LD1,LD2))
MET_DFA_1=lda(group~melody+rhythm,data=MET_test)
MET_DFA_1
MET_DFA=lda(group~melody+rhythm,data=MET_test,CV=T)
MET_DFA
w=predict(MET_DFA)
wvariable=predict(MET_DFA)
MET_DFA_1$x
predict(MET_DFA_1)
MET_DFA_1$x
MET_DFA_1=lda(group~melody+rhythm,data=MET_test)
MET_DFA_1
MET_DFA_1 = predict(MET_DFA_1)
MET_DFA_1=lda(group~melody+rhythm,data=MET_test)
MET_DFA_1
MET_DFA_1p = predict(MET_DFA_1)
MET_DFA_1p
MET_DFA_1p$x
table(MET_DFA_1p$class,MET_test$group)
scatter=ggplot(MET_DFA_1p,aes(LD1,LD2))
scatter = ggplot(MET_DFA_1p$x,aes(LD1,LD2, color = MET_test$group , shape = MET_DFA_1p$class == MET_test$group))
scatter = ggplot(MET_DFA_1p,aes(x[,1],x[,2], color = MET_test$group))
scatter = ggplot(MET_DFA_1p,aes(x[,1],x[,2])
scatter = ggplot(MET_DFA_1p,aes(x[,1],x[,2]))
scatter = ggplot(MET_DFA_1p,aes(x[,1],x[,2]))
MET_DFA_1pdf=as.data.frame(MET_DFA_1p)
scatter = ggplot(MET_DFA_1p,aes(x[,1],x[,2]))
success = MET_DFA_1p$class == MET_test$group)
success = MET_DFA_1p$class == MET_test$group
success
DF = data.frame(Group = MET_test$group, lda = MET_DFA_1p$x, Success = success)
View(DF)
scatter = ggplot(DF,aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess))
scatter + geom_point()
?aes
scatter = ggplot(DF)
scatter + geom_point(,aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess)
?aes
scatter + geom_point(,aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess))
scatter + geom_point(,aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess))
scatter + geom_jitter(,aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess))
scatter + geom_jitter(aes(lda.LD1,lda.LD1, color = DF$Group , shape = DF$Sucess))
scatter = ggplot(DF, aes(lda.LD1,lda.LD2, color = Group , shape = Sucess))
scatter + geom_jitter()
scatter + geom_point()
scatter = ggplot(DF, aes(lda.LD1,lda.LD2, color = Group , shape = Success))
scatter + geom_point()
install.packages("klar")
ggplot(DF, aes(lda.LD1,lda.LD2, color = Group , shape = Success, size=0.2))+
geom_point()+
labs(x="Linear Discrimant 1)")
library(klaR)
install.packages("klaR")
library(car);library(ggplot2);library(pastecs);library(reshape);library(mvoutlier);library(mvnormtest);library(MASS);library(klaR)
ggplot(DF, aes(lda.LD1,lda.LD2, color = Group , shape = Success, size=0.2))+
geom_point()+
labs(x="Linear Discrimant 1)")
ggplot(DF, aes(lda.LD1,lda.LD2, color = Group , shape = Success, size=0.2))+
geom_point()+
labs(x="Linear Discrimant 1",y="Liner Discrimant 2")
?partimat
install.packages("scales")
install.packages("scales")
library(scales)
library(car);library(ggplot2);library(pastecs);library(reshape);library(mvoutlier);library(mvnormtest);library(MASS);library(klaR);library(scales)
install.packages("scales")
install.packages("scales")
library(car);library(ggplot2);library(pastecs);library(reshape);library(mvoutlier);library(mvnormtest);library(MASS);library(klaR);library(scales)
setwd("C:/Users/Ejer/Desktop/Intro to Cog.Sci - instructor/Mental Rotation/mental_rotation_exp_from_psychopy/data")
#Set working directory:
setwd("C:/Users/Ejer/Desktop/Intro to Cog.Sci - instructor/Mental Rotation/mental_rotation_exp_from_psychopy/data")
#Load data
mentalrot<- read.csv("p_2017_aug_28_1407.csv", sep=",")
#Remove NAs
mentalrot<-subset(mentalrot,mentalrot$Response.rt!="NA")
#Remove outliers
mentalrot<-subset(mentalrot,mentalrot$Response.rt<mean(mentalrot$Response.rt)+3*sd(mentalrot$Response.rt))
#histogram
hist(mentalrot$Response.rt,breaks=10)
#Q-Q-plot
qqnorm(mentalrot$Response.rt)
#make a log-transformation
mentalrot$logrt=log(mentalrot$Response.rt)
#histogram
hist(mentalrot$logrt,breaks=10)
#Q-Q-plot
qqnorm(mentalrot$logrt)
mentalrot_model<-lm(mentalrot$logrt~mentalrot$angle)
summary(mentalrot_model)
mentalrot$angle_new<-abs(abs(180-mentalrot$angle)-180) #make rotation that go from 0-180 degrees, regardless of direction
mentalrot_model<-lm(mentalrot$logrt~mentalrot$angle_new)
summary(mentalrot_model)
library(ggplot2)
mentalrot$angle_f<-as.factor(mentalrot$angle_new)
ggplot(mentalrot, aes(x = angle_f , y = logrt)) +
geom_point() + labs(x = "angle of rotation", y = "log(response time)") +
geom_smooth(method='lm',aes( group = 1 ))
library(ggplot2)
mentalrot$angle_f<-as.factor(mentalrot$angle_new)
p <- ggplot(mentalrot, aes(x = angle_f , y = logrt))
p+ geom_boxplot()+ labs(x = "angle of rotation", y = "log(response time)")
#Set working directory:
setwd("C:/Users/Ejer/Desktop/Intro to Cog.Sci - instructor/Mental Rotation/mental_rotation_exp_from_psychopy/data")
#Load data
mentalrot<- read.csv("p_2017_aug_28_1407.csv", sep=",")
#Remove NAs
mentalrot<-subset(mentalrot,mentalrot$Response.rt!="NA")
#Remove outliers
mentalrot<-subset(mentalrot,mentalrot$Response.rt<mean(mentalrot$Response.rt)+3*sd(mentalrot$Response.rt))
#histogram
hist(mentalrot$Response.rt,breaks=10)
#Q-Q-plot
qqnorm(mentalrot$Response.rt)
#make a log-transformation
mentalrot$logrt=log(mentalrot$Response.rt)
#histogram
hist(mentalrot$logrt,breaks=10)
#Q-Q-plot
qqnorm(mentalrot$logrt)
setwd("C:/Users/Ejer/Desktop/Intro to Cog.Sci - instructor/Emotions and Reasoning/emotion_type1_and_type2/emotion_systems_data")
#Set working directory
setwd("C:/Users/Ejer/Desktop/Intro to Cog.Sci - instructor/Emotions and Reasoning/emotion_type1_and_type2/emotion_systems_data")
#Load data
emo<- read.csv("p (2017-08-28 15-02-06).csv", sep=";")
#Remove NAs
emo<-subset(emo,emo$rt!="NA")
emo<-subset(emo,emo$rt>0)
# A table showing the proportion of males drawn left as a function of the independent variables
aggdata <-aggregate(emo$emotion_judge,
by=list(emo$category),
FUN=mean, na.rm=TRUE)
library(reshape)
names(aggdata)<-c('Image category','% emotional')
aggdata
aggdata <-aggregate(emo$rt,
by=list(emo$category),
FUN=mean, na.rm=TRUE)
library(reshape)
names(aggdata)<-c('Image category','mean RT')
aggdata
emo_model<-lm(rt~category,data=emo)
anova(emo_model)
summary(emo_model)
#histogram
hist(emo$rt,breaks=10)
#Q-Q-plot
qqnorm(emo$rt)
#make a log-transformation
emo$logrt=log(emo$rt)
#histogram
hist(emo$logrt,breaks=10)
#Q-Q-plot
qqnorm(emo$logrt)
library(ggplot2)
ggplot(emo, aes(x = category , y = rt)) +
geom_boxplot() + labs(x = "image category", y = "Response time)")
