eco_dist5_cap <- economy_distribution_cap(10000,80,0.9,1,0.05, tax_range = c(.0, .5))
#Dataframe for Viz
CapDistViz <- rbind(eco_dist1_cap,eco_dist2_cap,eco_dist3_cap,eco_dist4_cap,eco_dist5_cap)
#UBI
#### FUNCTION ####
economy_ubi_cap <- function(N,tmax,Event_Likelihood,w,r,ubi, ubitax_range, capitalism_range = .4, poortax_range = c(.001, .01)){
people <-  as_tibble(matrix(rep(1:N),N,1))
colnames(people) <- c("ID")
people$talent <- rnorm(N,0.6,0.1)
people$Kapital <- rep(10,N)
type <- matrix(sample(c(1,-1,0),
tmax*N,
replace = TRUE,
prob = c(Event_Likelihood/2,Event_Likelihood/2,(1-Event_Likelihood))), nrow = N)
capital <- people$Kapital
mapital <- matrix(nrow = N,ncol = tmax)
# /!\ /!\ CHANGES /!\ /!\ #
#We add a new dataframe for luck
lucky <- matrix(nrow = N,ncol = tmax)
for (i in 1:tmax){
capital <- capital + capital*r
#We calculate z scores, cumulative probabilites and tax rate, as in the previous model
m <- mean(capital)
std <- sd(capital)
z_score <- (capital - m) / std
prob = case_when(
std == 0 ~ .5,
TRUE ~ pnorm(z_score))
tax = ubitax_range[1] + diff(ubitax_range) * prob
#Adding Capitalism
capitalism <- case_when(
prob < 0.8 ~ capitalism_range,
prob >= 0.8 ~ 0.0,
TRUE ~ pnorm(z_score))
poortax <- case_when(
prob <= .5 ~ poortax_range[2] - diff(poortax_range) * prob *2,
prob > .5 ~ 0,
TRUE ~ pnorm(z_score))
#We calculate people's profit according to the usual system developped in earlier models
capital_gains = case_when(
type[,i] == 0 ~ w*people$talent,
type[,i] == 1 ~ ifelse(runif(N) < people$talent,
capital*(people$talent),
0),
type[,i] == -1 ~ ifelse(runif(N) < people$talent,
0,
capital*(people$talent - 1)))
# /!\ /!\ CHANGES /!\ /!\ #
#We calculate people's luck outcome
luck = case_when(
type[,i] == 0 ~ 0,
type[,i] == 1 ~ ifelse(runif(N) < people$talent,
1,
0),
type[,i] == -1 ~ ifelse(runif(N) < people$talent,
0,
-1))
#We calculate people's new capital according to profit and tax rate
capital = case_when(
capital_gains > 0 ~ capital*(1-poortax) + capital_gains * (1-tax)*(1-capitalism),
capital_gains <= 0 ~ capital*(1-poortax) + capital_gains*(1-capitalism))#if one's profit is negative u still get taxed as poor
#We calculate people's new capital according to profit and tax rate
#We calculate the total earnings from the taxes (progressive tax on income and - falt 20% of corporate tax)
government_tax_earnings = sum(case_when(
capital_gains > 0 ~ (capital_gains * (tax))+((capital_gains * (capitalism))*0.2),
capital_gains <= 0 ~ 0))
#We calculate the total earnings from the capitalism (Remembering to subtract corporate tax)
capitalism_earnings = sum(case_when(
capital_gains > 0 ~ ((capital_gains * (capitalism))*0.8),
capital_gains <= 0 ~ 0))
# /!\ /!\ CHANGES /!\ /!\ #
# The Government Tax Earning stay get a 15% subtraction are and a flat UBI rate is given out.
capital = capital + ubi + (((government_tax_earnings/50)*42.5) / N)
#Distribute Capitalism to top 20%
capital = case_when(
prob < 0.8 ~ capital,
prob >= 0.8 ~ capital + (capitalism_earnings /(N*0.2)),
TRUE ~ pnorm(z_score))
mapital[,i] <- capital
lucky[,i] <- luck
}
#Adding a few column for data viz' later on
people <- cbind(people,mapital)
people$condition <- "ubi + capitalism"
people$tax_range <- 0
people$ubi <- ubi
people$Event_Likelihood <- Event_Likelihood
people$w <- w
people$r <- r
people$K <- "Flat"
# /!\ /!\ CHANGES /!\ /!\ #
#We Make rows and coloumns to plot luck
#people$talent2 <- people$talent
#people <- cbind(people,lucky)
return(people)
}
#### RUNS ####
#runs for different values of Event_Likelihoods with a paycheck of w=1 and an interest rate of r=0.1
eco_ubi1_cap <- economy_ubi_cap(10000,80,0.001,1,0.05, ubi = 10,ubitax_range = c(.0, .5))
eco_ubi2_cap <- economy_ubi_cap(10000,80,0.01,1,0.05, ubi = 10,ubitax_range = c(.0, .5))
eco_ubi3_cap <- economy_ubi_cap(10000,80,0.1,1,0.05, ubi = 10,ubitax_range = c(.0, .5))
eco_ubi4_cap <- economy_ubi_cap(10000,80,0.5,1,0.05, ubi = 10,ubitax_range = c(.0, .5))
eco_ubi5_cap <- economy_ubi_cap(10000,80,0.9,1,0.05, ubi = 10,ubitax_range = c(.0, .5))
#Dataframe for Viz
CapUbiViz <- rbind(eco_ubi1_cap,eco_ubi2_cap,eco_ubi3_cap,eco_ubi4_cap,eco_ubi5_cap)
### EXTRA
# POOR Tax + Capitalism
economy_poortax_cap <- function(N,tmax,Event_Likelihood,w,r, capitalism_range = .4, poortax_range = c(.001, .01)){
people <-  as_tibble(matrix(rep(1:N),N,1))
colnames(people) <- c("ID")
people$talent <- rnorm(N,0.6,0.1)
people$Kapital <- rep(10,N)
type <- matrix(sample(c(1,-1,0),
tmax*N,
replace = TRUE,
prob = c(Event_Likelihood/2,Event_Likelihood/2,(1-Event_Likelihood))), nrow = N)
capital <- people$Kapital
mapital <- matrix(nrow = N,ncol = tmax)
# /!\ /!\ CHANGES /!\ /!\ #
#We add a new dataframe for luck
lucky <- matrix(nrow = N,ncol = tmax)
for (i in 1:tmax){
capital <- capital + capital*r
#We calculate z scores and cumulative probabilites, as in the previous model
m <- mean(capital)
std <- sd(capital)
z_score <- (capital - m) / std
prob = case_when(
std == 0 ~ .5,
TRUE ~ pnorm(z_score))
#we calculate the poortaxes you have to pay
#if probability is above the mean, you have no taxes
#if probability is very low, your taxes are close to the higher boundaries
poortax <- case_when(
prob <= .5 ~ poortax_range[2] - diff(poortax_range) * prob *2,
prob > .5 ~ 0,
TRUE ~ pnorm(z_score))
#Adding Capitalism
capitalism <- case_when(
prob < .8 ~ capitalism_range,
prob >= .8 ~ 0.0,
TRUE ~ pnorm(z_score))
#We calculate people's profit according to the usual system developped in earlier models
capital_gains = case_when(
type[,i] == 0 ~ w*people$talent,
type[,i] == 1 ~ ifelse(runif(N) < people$talent,
capital*(people$talent),
0),
type[,i] == -1 ~ ifelse(runif(N) < people$talent,
0,
capital*(people$talent - 1)))
# /!\ /!\ CHANGES /!\ /!\ #
#We calculate people's luck outcome
luck = case_when(
type[,i] == 0 ~ 0,
type[,i] == 1 ~ ifelse(runif(N) < people$talent,
1,
0),
type[,i] == -1 ~ ifelse(runif(N) < people$talent,
0,
-1))
#After caculating people's profit for this time step, you add it to their capital while adding capitalism
capital = case_when(
capital_gains > 0 ~ capital*(1-poortax) + capital_gains *(1-capitalism),
capital_gains <= 0 ~ capital*(1-poortax) + capital_gains *(1-capitalism)) #if one's profit is negative u still get taxed as poor
#We calculate the total earnings from the capitalism (No Tax on Capitalism, as there's no taxsystem setup)
capitalism_earnings = sum(case_when(
capital_gains > 0 ~ capital_gains * (capitalism),
capital_gains <= 0 ~ 0))
#Distribute Capitalism to top 20%
capital = case_when(
prob < .8 ~ capital,
prob >= .8 ~ capital + (capitalism_earnings /(N*0.2)),
TRUE ~ pnorm(z_score))
mapital[,i] <- capital
lucky[,i] <- luck
}
#Adding a few column for data viz' later on
people <- cbind(people,mapital)
people$condition <- "poortax + Capitalism"
people$tax_range <- 0
people$ubi <- 0
people$Event_Likelihood <- Event_Likelihood
people$w <- w
people$r <- r
people$K <- "Flat"
# /!\ /!\ CHANGES /!\ /!\ #
#We Make rows and coloumns to plot luck
#people$talent2 <- people$talent
#people <- cbind(people,lucky)
return(people)
}
#### RUNS ####
#runs for different values of Event_Likelihoods with a paycheck of w=1 and an interest rate of r=0.1
eco_poortax1_cap <- economy_poortax_cap(10000,80,0.001,1,0.05)
eco_poortax2_cap <- economy_poortax_cap(10000,80,0.01,1,0.05)
eco_poortax3_cap <- economy_poortax_cap(10000,80,0.1,1,0.05)
eco_poortax4_cap <- economy_poortax_cap(10000,80,0.5,1,0.05)
eco_poortax5_cap <- economy_poortax_cap(10000,80,0.9,1,0.05)
#Dataframes for Viz
CapPoorViz <- rbind(eco_poortax1_cap,eco_poortax2_cap,eco_poortax3_cap,eco_poortax4_cap,eco_poortax5_cap)
#Make GDP and Growth function
SuperCapital <- function(df, taxlevel, Chances){
datatime<- filter(df, tax_range == taxlevel, Event_Likelihood == Chances)
#print(unique(datatime$tax_range))
#print(unique(datatime$Event_Likelihood))
#print(length(datatime$ID))
#print(colnames(datatime))
datatime1 = datatime[c(3:83)]
#print(colnames(datatime))
GDP = colSums(datatime1)
Growth = c(0,rep(NA,80))
for (i in 2:81){
Growth[i] = (GDP[i]/GDP[i-1] - 1) * 100
}
ecostuff <- cbind(GDP,Growth, taxlevel,Chances)
return(ecostuff)
}
#End Dataframe
ecostuff_final <- data.frame()
GDP <- 0
Growth <- 0
taxlevel <- 0
Chances <- 0
ecostuff_final <- cbind(GDP, Growth, taxlevel, Chances)
ecostuff_final
#Make Lists
Taxielevels = 0.5
ChancieLevels = c(0.001,0.01,0.05,0.5,0.9)
df = CapDistViz
#Loop In Loop
for (c in ChancieLevels){ #loop over list of files
for (t in Taxielevels){ #loop over list of files
cool <- SuperCapital(df, t, c)
cool <- data.frame(cool)
ecostuff_final <- rbind(ecostuff_final,cool)
}}
df = CapDistViz
#Remove First Line
ecostuff_final <- ecostuff_final[-1, ]
view(ecostuff_final)
view(ecostuff_final)
#End Dataframe
ecostuff_final <- data.frame()
GDP <- 0
Growth <- 0
taxlevel <- 0
Chances <- 0
ecostuff_final <- cbind(GDP, Growth, taxlevel, Chances)
ecostuff_final
#Make Lists
Taxielevels = 0.5
ChancieLevels = c(0.001,0.01,0.05,0.5,0.9)
df = CapDistViz
#Loop In Loop
for (c in ChancieLevels){ #loop over list of files
for (t in Taxielevels){ #loop over list of files
cool <- SuperCapital(df, t, c)
cool <- data.frame(cool)
ecostuff_final <- rbind(ecostuff_final,cool)
}}
View(ecostuff_final)
#Remove First Line
ecostuff_final <- ecostuff_final[-1, ]
#End Dataframe
ecostuff_final <- data.frame()
GDP <- 0
Growth <- 0
taxlevel <- 0
Chances <- 0
ecostuff_final <- cbind(GDP, Growth, taxlevel, Chances)
ecostuff_final
#Make Lists
Taxielevels = 0.5
ChancieLevels = c(0.001,0.01,0.1,0.5,0.9)
df = CapDistViz
#Loop In Loop
for (c in ChancieLevels){ #loop over list of files
for (t in Taxielevels){ #loop over list of files
cool <- SuperCapital(df, t, c)
cool <- data.frame(cool)
ecostuff_final <- rbind(ecostuff_final,cool)
}}
#Remove First Line
ecostuff_final <- ecostuff_final[-1, ]
view(ecostuff_final)
ggplot(ecostuff_final, aes(x=Growth,y=GDP, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism for different Event_likelihoods",y="GDP",x="Growth")
g1 <- ggplot(ecostuff_final, aes(x=Growth, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism for different Event_likelihoods",y="GDP",x="Time")
ggplot(ecostuff_final, aes(x=Growth, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism for different Event_likelihoods",y="GDP",x="Time")
list <- rep(1:81, 5)
cbind(ecostuff_final,list)
ecostuff_final2 <- cbind(ecostuff_final,list)
View(ecostuff_final2)
time <- rep(1:81, 5)
ecostuff_final <- cbind(ecostuff_final,time)
g1 <- ggplot(ecostuff_final, aes(x=GDP,y=time, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
g2 <- ggplot(ecostuff_final, aes(x=Growth,y=time, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
View(ecostuff_final)
g1 <- ggplot(ecostuff_final, aes(x=GDP,y=time)) +
geom_line(color=Chances) + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
g2 <- ggplot(ecostuff_final, aes(x=Growth,y=time, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
g1 <- ggplot(ecostuff_final, aes(x=GDP,y=time, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
g2 <- ggplot(ecostuff_final, aes(x=Growth,y=time, color=Chances)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
g2 <- ggplot(ecostuff_final, aes(x=Growth,y=time, color=Chances)) +
geom_point() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
g2 <- ggplot(ecostuff_final, aes(x=Growth,y=time, color=Chances)) +
geom_point() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
colnames(ecostuff_final)[4] <- "Event_likelihood"
View(ecostuff_final)
g1 <- ggplot(ecostuff_final, aes(x=time,y=GDP, color=Event_likelihood)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
g2 <- ggplot(ecostuff_final, aes(x=time,y=Growth, color=Event_likelihood)) +
geom_point() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
plot_grid(g1,g2)
g1 <- ggplot(ecostuff_final, aes(x=time,y=GDP, color=Event_likelihood)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
ggplot(ecostuff_final, aes(x=time,y=GDP, color=Event_likelihood)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
ggplot(ecostuff_final, aes(x=time,y=GDP, color=Event_likelihood)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
ggplot(ecostuff_final, aes(x=time,y=Growth, color=Event_likelihood)) +
geom_point() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="Growth",x="Time")
#### PLOTS ####
#comparing the distribution model to the interest rate one (with fix w = 1 and fix r = 0.1)
ggplot(eco_capvsP, aes(talent,`80`, color=condition)) +
geom_point(alpha=0.15,size=0.1) +
scale_y_continuous(trans='log10')+
facet_grid(~Event_Likelihood)
#### PLOTS ####
#Look at the UBI
ggplot(eco_UBI, aes(talent,`80`, color=ubi)) +
geom_point(alpha=0.15,size=0.1) +
scale_y_continuous(trans='log10')+
facet_grid(~Event_Likelihood)+ labs(title="Distribution of wealth over Talent across different Event_likelihoods",y="Capital/Succes",x="Talent")
ggplot(ecostuff_final, aes(x=time,y=GDP, color=Event_likelihood)) +
geom_line() + labs(title="Wealth Distribution + Capitalism model for different Event_likelihoods",y="GDP",x="Time")
#Make sure you're in the folder where your data is
getwd()
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/")
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/W13 - Motion/")
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/W13 - Motion")
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/")
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/W13 - Motion tracking and analysis/Exp/")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(signal)
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/4/Models for perception and action/Exam/3 - Movements/W13 - Motion tracking and analysis/Exp/")
participant <- 21
trial <- 12
filename <- paste(participant,'/',participant,'_',trial,'.txt',sep="")
hp = read.table(filename,header=FALSE,sep=",",dec=".")
participant <- 21
trial <- 12
filename <- paste(participant,'/',participant,'_',trial,'.txt',sep="")
hp = read.table(filename,header=FALSE,sep=",",dec=".")
names(hp) <- c("sample","cond","x","y")
plot(hp$x,hp$y,'l')
dist <- sum(sqrt(diff(hp$x)^2 + diff(hp$y)^2))
paste("Distance: ",round(dist))
hp$t <-  (hp$sample-1) * 0.0025
View(hp)
hp$vel <- c(0,diff(hp$y) / diff(hp$t))
hp$acc <- c(0,diff(hp$vel) / diff(hp$t))
plot(hp$t,hp$acc,'l')
lines(hp$t,hp$vel,'l')
lines(hp$t,hp$y,'l')
title("position, velocity, acceleration")
hp$vel <- c(0,diff(hp$y)
hp$vel <- c(0,diff(hp$y))
plot(hp$t,hp$acc,'l')
lines(hp$t,hp$vel,'l')
lines(hp$t,hp$y,'l')
max(hp$y)
max(hp$vel)
bf <- butter(2, 0.1, type ='low') # requires signal package
hp$velf <- filtfilt(bf,hp$vel)
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,hp$velf,'l', col = "red")
title(paste("velocity (filter cutoff ",0.1,")",sep=""))
bf <- butter(2, 0.01, type ='low')
velf_test <- filtfilt(bf,hp$vel)
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,velf_test,'l', col = "red")
title(paste("velocity (filter cutoff ",0.01,")",sep=""))
bf <- butter(2, 0.1, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
title(paste("acceleration (filter cutoff ",0.1,")",sep=""))
?butter()
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,hp$velf,'l', col = "red")
title(paste("velocity (filter cutoff ",0.1,")",sep=""))
bf <- butter(2, 0.01, type ='low')
velf_test <- filtfilt(bf,hp$vel)
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,velf_test,'l', col = "red")
bf <- butter(2, 0.1, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 2000, type ='high')
# requires signal package
bf <- butter(2, 0.1, type ='low')
hp$velf <- filtfilt(bf,hp$vel)
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,hp$velf,'l', col = "red")
title(paste("velocity (filter cutoff ",0.1,")",sep=""))
bf <- butter(2, 0.01, type ='low')
velf_test <- filtfilt(bf,hp$vel)
plot(hp$t,hp$vel,'l', col = "black")
lines(hp$t,velf_test,'l', col = "red")
bf <- butter(2, 0.1, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 0.01, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 1, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 0.9, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 0.7, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
bf <- butter(2, 0.5, type ='low')
hp$accf <- filtfilt(bf,hp$acc)
plot(hp$t,hp$acc,'l', col = "black")
lines(hp$t,hp$accf,'l', col = "red")
zcr <- c(0,diff(sign(hp$velf)))
zcrMin <- zcr==2
zcrMax <- zcr==-2
plot(hp$x,hp$y,'l')
points(hp$x[zcrMin],hp$y[zcrMin],col = "black")
points(hp$x[zcrMax],hp$y[zcrMax],col = "green")
zcrTarget <- hp$x>1160&hp$x<1330&zcrMax
paste("Target position (x) and value (y): ",hp$x[zcrTarget],hp$y[zcrTarget])
points(hp$x[zcrTarget],hp$y[zcrTarget],col = "red")
#Telma
data <- hp
data$velextreme <- ifelse(data$velocity < 20 & data$velocity > -20, 1,0)
View(data)
data$velextreme <- ifelse(data$vel < 20 & data$vel > -20, 1,0)
# derivative of velocity is acceleration => the local maxima and minima are at those points where the derivative is 0
# center the data by substracting the minimum values
data$x_center <-  data$x - min(data$x)
data$y_center <-  data$y - min(data$y)
ggplot(data) +
geom_point( aes(x_center,y_center, color = factor(velextreme), size = velextreme)) +
# plot by this factor, you get the zero crossing plotted in the different color
labs(x = "Trajectory", y = "Height")
localmax <- max(data$y_center[2200:2400])
which(data$y_center == 267.336) # 2350
data$colorvel<- ifelse(data$y_center == localmax ,1,0)
ggplot(data) +
geom_point( aes(x_center,y_center, size = colorvel, color = factor(colorvel))) +
#geom_point( aes(x_center,y_center, size = factor(velextreme))) +
# plot by this factor, you get the zero crossing plotted in the different color
labs(x = "Trajectory", y = "Height") +
theme(legend.title = element_blank(), legend.position='none')
df <- hp
hey <- butter(2, 0.1, type = "low")
p_load(GENEAclassify)
install.packages(GENEAclassify)
install.packages("GENEAclassify")
#Mikkel
library(signal)
library(GENEAclassify)
hey <- butter(2, 0.1, type = "low")
View(df)
wip <- filtfilt(hey, df$vel)
wup <- filtfilt(hey, df$acc)
plot(df$vel)
plot(df$acc)
plot(wip)
plot(wup)
plot(df$vel)
plot(wip)
plot(df$acc)
plot(wup)
zcr <- c(0,diff(sign(hp$vel)))
zcrMin <- zcr==2
zcrMax <- zcr==-2
plot(hp$x,hp$y,'l')
points(hp$x[zcrMin],hp$y[zcrMin],col = "black")
points(hp$x[zcrMax],hp$y[zcrMax],col = "green")
zcr <- c(0,diff(sign(hp$velf)))
zcrMin <- zcr==2
zcrMax <- zcr==-2
plot(hp$x,hp$y,'l')
points(hp$x[zcrMin],hp$y[zcrMin],col = "black")
points(hp$x[zcrMax],hp$y[zcrMax],col = "green")
